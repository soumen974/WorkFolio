  @media (max-width:1290px) {
    svg{
        margin-top: -1.9rem;
        width:99%; 
        height:255px;
    }
   }
   @media (max-width:1255px) {
    svg{
        margin-top: -2.1rem;
        width:99%; 
    }
   }

   @media (max-width:1137px) {
    svg{
        margin-top: -2.6rem;
        width:99%; 
    }

   }

   @media (max-width:820px) {
    svg{
        margin-top: -4.2rem;
        width:99%; 
    }

    .right_landing_content button{
        padding: 0.9rem 1.3rem ;
        background-color: #0116ff;
        border-radius: 010rem;
        border: 1px solid transparent;
        color: white;
        font-size: 1rem;
        font-weight:600;
        word-spacing: 0.181rem;
        width: 120%;
        
    }


   }
   @media (max-width:593px) {
    svg{
        margin-top: -5.2rem;
        width:99%; 
    }
    .landing_page_content{
        margin-top: -6rem;
        flex-wrap: wrap;
        display: block;
        width: 100%;
        padding: 0rem 1rem ;
    }
    .left_landing_content h2{
        font-size: 2rem;
        width: 180%;
    }

    .landing_ad-talk{
        font-size: 1.2rem;
        width: 180%;
        padding: 2rem 0rem ;
    }
   }
   @media (max-width:420px) {
    svg{
        margin-top: -6.3rem;
        width:99%; 
        /* height: 16vh; */
    }
   }

_________________________________________________________



@media (max-width:1286px) {
    
    .landing_page_content{
        /* background-color: black; */
        margin-top: -3rem;
        display:flex;
        flex-wrap: wrap;
        width: 100%;
        padding: 0rem 1.25rem ;
        justify-content: space-evenly;
    }

    .left_landing_content h2{
        font-size: 2.3rem;
        width: 48%;
    }
    .right_landing_content{
        display: flex;
    }

    
.Down_things{
    padding: 0rem 1.25rem ;
    margin-top: -8rem;

}
.Down_things button {
    padding: 0.85rem 3.2rem ;
    background-color: #0116ff;
    border-radius: 0.4rem;
    border: 1px solid transparent;
    color: white;
    font-size: 1.5rem;
    font-weight: 600;
    word-spacing: 0.371rem;
}

   }


-------------------------------------------------------

 @media (max-width:680px){

    .Down_things button :hover {
        background-color: #000109;
    }
    
    .UpperVectorHead svg{
        margin-top: -.1991rem;
        width:100%; 
    }

    .landing_page_content{
        /* background-color: black; */
        margin-top: 0.02rem;
        display: flex;
        flex-wrap: wrap;
        width: 100%;
        padding: 0rem 2rem ;
        justify-content: space-evenly;
        /* gap: 0.1rem; */
    }

   .left_landing_content h2{
       font-size: 1.84rem;
       width: 100%;
   }

   .right_landing_content  img{
    height: 10rem;
    width: 10rem;
    transform: rotate(-5.99deg);
    border: 0.25rem solid white;
    position:relative;
}
.Down_things{
    padding: 1rem 2rem ; 
    margin-top: 0rem;

}

  .landing_ad-talk{
    font-size: 0.86rem;
    font-weight: 500;
    width: 102%;
    text-align: center;
   padding: 1rem 0rem ;
  }
  

  .Down_things button{
    padding: 0.9rem 1rem ;
    background-color: #0116ff;
    border-radius: 6rem;
    border: 1px solid transparent;
    color: white;
    font-size: 1.1rem;
    font-weight:600;
    word-spacing: 0.11rem;
    text-align: center;
    width: 100%;
    
}

.right_landing_content{
    display: flex;
}
.ThreeVector{
    position:static;
    z-index: -1;
}

.yellowVector svg{
margin-left: -2.6rem;
margin-top: -1.2rem;
height: 11rem;
width: 11rem;
}

.blueVector svg{
    margin-left: -7rem;
    margin-top: -5rem;
    height: 11rem;
    width: 11rem;
    transform: rotate(17deg);
    position:relative;
    }

    .dottet-vector svg{
     position:static;
    margin-left: -1rem;
    margin-top: -8rem;
     height: 7.2rem;
    width: 8rem;
    }
    .starsRates{
        display: inline-flex;
        justify-content: space-evenly;
        padding: 0rem 0.69rem;
    
    }
    .Rating_talk{
        font-size: 0.7rem;
        padding: 0rem 0.6rem;
    }

   }


  <input type="file" accept="image/*" onChange={handleImageUpload} />
   {selectedImage && <img src={selectedImage} alt="Uploaded" />}
   






     <div className="Review-box-model">
          <div className="head-box-model">
            <div className="review-er-details">
              <div className="review-er-image"></div>
              <div className="review-er-name-post">
                <h1>Soumen Bhunia</h1>
                <h6>CEO</h6>
              </div>
            </div>
            <div className="review-er-rating"></div>
          </div>
          <hr/>
          <div className="riview-text">" As someone who spent a long time unemployed in the past , I absolutely love this. Well done guys! I really hope this gets wildly popular, it will be valuable to so many people. "</div>
        </div>

     <div className="Review-box-model">

          <div className="head-box-model">
            <div className="review-er-details">
              <div className="review-er-image"></div>
              <div className="review-er-name-post">
                <h1>Soumen Bhunia</h1>
                <h6>CEO</h6>
              </div>
            </div>
            <div className="review-er-rating"></div>
          </div>
          <hr/>
          <div className="riview-text">" As someone who spent a long time unemployed in the past , I absolutely love this. Well done guys! I really hope this gets wildly popular, it will be valuable to so many people. "</div>
        </div>


        import React, { useState } from "react";

function ImageUploader() {
  const [imageSrc, setImageSrc] = useState(null);
  const [showImage, setShowImage] = useState(false);

  const handleImageChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        setImageSrc(e.target.result);
      };
      reader.readAsDataURL(file);
    }
  };

  const toggleImage = () => {
    setShowImage(!showImage);
  };

  return (
    <div>
      <h1>Image Uploader</h1>
      <input type="file" onChange={handleImageChange} accept="image/*" />
      <button onClick={toggleImage}>Show Image</button>
      {showImage && imageSrc && (
        <div>
          <h2>Uploaded Image</h2>
          <img
            style={{ height: "12rem", width: "12rem" }}
            src={imageSrc}
            alt="Uploaded"
          />
        </div>
      )}
    </div>
  );
}

export default ImageUploader;
